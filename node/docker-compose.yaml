version: '3.8'

services:
  
  nodeAplication:
    build:
      context: ./app-node      
    image: hugocabral28/nodeapp
    #Comando para dar start na aplicação
    command: npm start
    container_name: nodeApp    
    hostname: nodejsserver
    #Verificar se o DB já foi finalizado
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh
    volumes: 
      - ./app-node:/usr/src/app-node
    networks:
      - nodenet
    tty: true
    depends_on:
      - db

  nginx:
    build: 
      context: ./nginx
    image: hugocabral28/nginx-proxy-reverso
    container_name: nginx
    hostname: nginx
    networks:
      - nodenet
    tty: true
    ports:
      - "8080:80"
    depends_on:
      - nodeAplication

  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    #Caso o container cair, será restartado automaticamente
    restart: always
    #É o mesmo que escrever -t no comando docker
    tty: true
    hostname: db
    #Copia da pasta msql para /var/lib/mysql do container
    volumes: 
      - ./mysql:/var/lib/mysql
    ports:
      - "3306:3306"
    #Variaveis de ambientes
    environment:
      - MYSQL_DATABASE=dbnodeapp
      - MYSQL_ROOT_PASSWORD=root
    networks:
      - nodenet

networks:
  nodenet:
    driver: bridge